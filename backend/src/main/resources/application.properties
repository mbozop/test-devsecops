
#Asignacion de puerto donde se ejecutara la aplicación (por defecto es 8080)
#server.port = 8081


#En caso de desarrollo en entorno local, sin docker, descomentar esta linea.
spring.datasource.url=jdbc:mysql://localhost:3306/civilo_roller_db



#En caso de ejecutarse dentro de un contenedor docker junto con el docker del mysql en una misma red, descomentar esta linea.
#queda pendiente que la url,username y password se ingresen por variable de entorno.
#spring.datasource.url=jdbc:mysql://contenedor-civilo-mysql:3306/civilo_roller_db


#Comando de docker para saber la ip de un contenedor especifico (se reemplaza por 'localhost')
#Esto sirve para obtener la ip del contenedor en donde se ejecuta la aplicacion de spring boot para realizar peticiones al servidor
#En este caso, el nombre del contenedor es 'contenedor-civilo roller-backend'
#docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' contenedor-civilo-roller-backend










spring.datasource.username=root
spring.datasource.password=admin
# Si la base de datos no existe, con "update" se crea autom�ticamente
spring.jpa.hibernate.ddl-auto=update

#Esta propiedad la puse yo (gerardo), era para corregir un problema con una consulta sql, la deja mas que nada por si es que la llego a necesitar, aunque no creo.
#spring.jackson.serialization.fail-on-empty-beans=false

